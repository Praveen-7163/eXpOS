loadi(65,7);
//loadi(66,8);

loadi(67,9);
loadi(68,10);

loadi(22,35);
loadi(23,36);

loadi(63,13);
loadi(64,14);

loadi(4,17);
loadi(5,18);

loadi(16,29);
loadi(17,30);

loadi(2,15);
loadi(3,16);

loadi(50,63);
loadi(51,64);

loadi(40,53);
loadi(41,54);

loadi(48,61);
loadi(49,62);

loadi(8,21);
loadi(9,22);

loadi(14,27);
loadi(15,28);

loadi(20,33);
loadi(21,34);

loadi(42,55);
loadi(43,56);

loadi(44,57);
loadi(45,58);

loadi(59,3);
loadi(60,4);

loadi(6,19);
loadi(7,20);

loadi(61,2);

loadi(18,31);
loadi(19,32);

loadi(24,37);
loadi(25,38);

loadi(32,45);
loadi(33,46);

loadi(28,41);
loadi(29,42);

loadi(30,43);
loadi(31,44);

loadi(62,5);

loadi(10,23);
loadi(11,24);

loadi(12,25);
loadi(13,26);

loadi(46,59);
loadi(47,60);

loadi(26,39);
loadi(27,40);

loadi(34,47);
loadi(35,48);

loadi(36,49);
loadi(37,50);

[TERMINAL_STATUS_TABLE] = 0;
[DISK_STATUS_TABLE] = 0;

alias p R1;
p = 0;
while(p <= 80) do
[MEMORY_FREE_LIST + p] = 1;
p = p + 1;
endwhile;

while(p < 128) do
[MEMORY_FREE_LIST + p] = 0;
p = p + 1;
endwhile;

p = 0;
while(p < 32) do
[SEMAPHORE_TABLE + p*4] = -1;
[SEMAPHORE_TABLE + p*4 + 1] = 0;
p = p + 1;
endwhile;

[SYSTEM_STATUS_TABLE + 2] = 47;
[SYSTEM_STATUS_TABLE + 3] = 0;
PTBR=PAGE_TABLE_BASE+20;
PTLR = 10;

[PTBR+0] = 63;
[PTBR+1] = "0100";
[PTBR+2] = 64;
[PTBR+3] = "0100";
[PTBR+4] = -1;
[PTBR+5] = "0000";
[PTBR+6] = -1;
[PTBR+7] = "0000";
[PTBR+8] = 65;
[PTBR+9] = "0100";
[PTBR+10] = -1;
[PTBR+11] = "0000";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";
[PTBR+16] = 66;
[PTBR+17] = "0110";
[PTBR+18] = -1;
[PTBR+19] = "0000";

//[DISK_MAP_TABLE + 10*1 + 0] = -1;
//[DISK_MAP_TABLE + 10*1 + 1] = -1;
//[DISK_MAP_TABLE + 10*1 + 2] = -1;
//[DISK_MAP_TABLE + 10*1 + 3] = -1;
//[DISK_MAP_TABLE + 10*1 + 4] = 7;
//[DISK_MAP_TABLE + 10*1 + 5] = 8;
//[DISK_MAP_TABLE + 10*1 + 6] = -1;
//[DISK_MAP_TABLE + 10*1 + 7] = -1;
//[DISK_MAP_TABLE + 10*1 + 8] = -1;
//[DISK_MAP_TABLE + 10*1 + 9] = -1;

alias pte R2;
pte = PROCESS_TABLE + 16;
[pte + 1]=1;
[pte + 3]=0;
[pte + 4]=CREATED;
[pte + 12]=0;
[pte + 11]=77;
[pte + 15]=10;
[pte + 13]=8*512;
[pte + 14]=PAGE_TABLE_BASE+20;

[66*512] = [65*512 + 1];

PTBR=PAGE_TABLE_BASE+40;
PTLR = 10;

[PTBR+0] = 63;
[PTBR+1] = "0100";
[PTBR+2] = 64;
[PTBR+3] = "0100";
[PTBR+4] = -1;
[PTBR+5] = "0000";
[PTBR+6] = -1;
[PTBR+7] = "0000";
[PTBR+8] = 67;
[PTBR+9] = "0100";
[PTBR+10] = 68;
[PTBR+11] = "0100";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";
[PTBR+16] = 78;
[PTBR+17] = "0110";
[PTBR+18] = 79;
[PTBR+19] = "0110";

alias dmt R2;
dmt = DISK_MAP_TABLE + 10*2; 
[dmt + 0] = -1;
[dmt + 1] = -1;
[dmt + 2] = -1;
[dmt + 3] = -1;
[dmt + 4] = 9;
[dmt + 5] = 10;
[dmt + 6] = -1;
[dmt + 7] = -1;
[dmt + 8] = -1;
[dmt + 9] = -1;

alias pte R2;
pte = PROCESS_TABLE + 16*2;

[pte + 1]=2;
[pte + 3]=1;
[pte + 12]=0;
[pte + 11]=80;
[pte + 15]=10;
[pte + 13]=8*512;
[pte + 14]=PAGE_TABLE_BASE+40;

[78*512] = [67*512 + 1];

alias q R2;
q = [PROCESS_TABLE+16+11]*512 + 496;
p = 0;
while(p<8) do
[q + p*2] = -1;
[q + p*2 + 1] = -1;
p = p + 1;
endwhile;   

p = 0;
while(p < 60) do
[FILE_STATUS_TABLE + p*4] = -1;
[FILE_STATUS_TABLE + p*4 + 1] = -1;
p = p + 1;
endwhile; 

p = 0;
while(p < 4) do
[BUFFER_TABLE + p*4] = -1;
[BUFFER_TABLE + p*4 + 1] = 0;
[BUFFER_TABLE + p*4 + 2] = -1;
p = p + 1;
endwhile;

p = 0;
while(p < 32) do
[OPEN_FILE_TABLE + p*4] = -1;
[OPEN_FILE_TABLE + p*4 + 1] = 0;
p = p + 1;
endwhile;

p = 2;
while(p < 16) do
[PROCESS_TABLE+16*p+4]=TERMINATED;
p = p + 1;
endwhile;

breakpoint;
return;
